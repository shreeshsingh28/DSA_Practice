Question - https://leetcode.com/problems/rotate-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) 
    {
        if(head == NULL)
            return NULL;

        if(head->next == NULL)
            return head;

        ListNode* t =head;
        int n=1;
        while(t->next != NULL)
        {
            t=t->next;
            n++;
        }
        if(k>n)
            k=k%n;

        for(int i=0 ; i<k ;i++)
        {
            ListNode* curr = head;
            ListNode* pre = NULL;
            while(curr->next != NULL)
            {
                pre = curr;
                curr = curr->next;
            }
            curr->next = head;
            pre->next = NULL;
            head = curr;
        }
        return head;
    }
};
